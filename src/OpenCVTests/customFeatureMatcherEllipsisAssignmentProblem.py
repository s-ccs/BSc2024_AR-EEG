import cv2
import numpy as np
import math
import time
from scipy.optimize import linear_sum_assignment

# global vars
minArea = 200
ellipseRatioThreshold = 2.4
thresh = 100
maxArea = 3600
erodeDivider = 200
inclusionCircle = 140 #70
patternLength = 15
colorYGThresh = 81
costTheshold = 3

def changeMinArea(val):
    global minArea
    minArea = val

def changeEllipseRatioThreshold(val):
    global ellipseRatioThreshold
    ellipseRatioThreshold = val / 10

def changeThreshold(val):
    global thresh
    thresh = val

def changeMaxArea(val):
    global maxArea
    maxArea = val

def changeErodeDivider(val):
    global erodeDivider
    erodeDivider = val

def changeInclusionCircle(val):
    global inclusionCircle
    inclusionCircle = val

def changePatternLength(val):
    global patternLength
    patternLength = val

def changeColorYGThresh(val):
    global colorYGThresh
    colorYGThresh = val

def changeCostTheshold(val):
    global costTheshold
    costTheshold = val


source_window = 'Source'
cv2.namedWindow(source_window)
# create trackbars
cv2.createTrackbar('minArea:', source_window, minArea, 10000, changeMinArea)
cv2.createTrackbar('ellipseRatioThreshold:', source_window, int(ellipseRatioThreshold * 10), 100, changeEllipseRatioThreshold)

cv2.createTrackbar('threshold:', source_window, thresh, 1000, changeThreshold)
cv2.createTrackbar('maxArea:', source_window, maxArea, 10000, changeMaxArea)
cv2.createTrackbar('erodeDivider:', source_window, erodeDivider, 1000, changeErodeDivider)
cv2.createTrackbar('inclusionCircle:', source_window, inclusionCircle, 200, changeInclusionCircle)
cv2.createTrackbar('patternLength:', source_window, patternLength, 10, changePatternLength)
#cv2.createTrackbar('colorYGThresh:', source_window, colorYGThresh, 360, changeColorYGThresh)
cv2.createTrackbar('costTheshold:', source_window, costTheshold, 20, changeCostTheshold)



#cap = cv2.VideoCapture(0)
cap = cv2.VideoCapture("H:/Unity/Hololens Recordings/CapEllipseTesting/20240611_061811_HoloLens.mp4")
if not cap.isOpened():
    print("Cannot open camera")
    exit()
while True:
    # Capture frame-by-frame
    ret, img = cap.read()
    #img = cv2.imread("H:/Unity/BThesisSandbox/3D Model Cap/V2/20240312_155523.jpg")
    #img = cv2.imread("H:/Unity/Hololens Recordings/CapEllipseTesting/20240611_061728_HoloLens.jpg")

    height = img.shape[0]
    width = img.shape[1]

    if height > width:
        if height > 1000:
            img = cv2.resize(img, (int(width * 1000 / height), 1000))
    else:
        if width > 1000:
            img = cv2.resize(img, (1000, int(height * 1000 / width)))

    #img = cv2.resize(img, (750, 1000))

    # if frame is read correctly ret is True
    #if not ret:
    #    print("Can't receive frame (stream end?). Exiting ...")
    #    break
    # Our operations on the frame come here

    # converting image into grayscale image
    gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)
    #cv2.imshow('gray', gray)
    hsv = cv2.cvtColor(img, cv2.COLOR_BGR2HSV)

    blur = cv2.medianBlur(gray, 11)
    #cv2.imshow('blur', blur)

    _, threshold = cv2.threshold(blur, thresh, 255, cv2.THRESH_BINARY)
    #cv2.imshow('threshold', threshold)

    #Remove small noise
    #kernel = np.ones((2,2),np.uint8)
    kernel = cv2.getStructuringElement(cv2.MORPH_ELLIPSE, (3, 3))
    opening = cv2.morphologyEx(threshold, cv2.MORPH_OPEN, kernel, iterations=3)
    #cv2.imshow('opening', opening)

    dilate = cv2.dilate(opening, None, iterations=2)
    cv2.imshow('dilate', dilate)

    class ElectrodeContour:
        def __init__(self, ellipse, contour, centerPos, color, colorStr):
            self.ellipse = ellipse
            self.contour = contour
            self.centerPos = centerPos
            self.color = color
            self.colorStr = colorStr

    canny_output = cv2.Canny(dilate, 100, 100 * 2)
    contours, _ = cv2.findContours(canny_output, cv2.RETR_TREE, cv2.CHAIN_APPROX_SIMPLE)

    # Find the rotated rectangles and ellipses for each contour
    minEllipse = [None]*len(contours)
    for i, c in enumerate(contours):
        if c.shape[0] > 5:
            minEllipse[i] = cv2.fitEllipse(c)

    totalMask = np.zeros(img.shape, img.dtype)

    def distance(p1, p2):
        return math.sqrt((p1[0] - p2[0])**2 + (p1[1] - p2[1])**2)

    # Filter Contours
    electrodes: list[ElectrodeContour] = []
    for i, c in enumerate(contours):
        area = cv2.contourArea(c)
        if area < minArea or area > maxArea:
            continue

        if c.shape[0] <= 5:
            continue

        sizeRatio = minEllipse[i][1][0] / minEllipse[i][1][1]
        if sizeRatio < (1 / ellipseRatioThreshold) or sizeRatio > ellipseRatioThreshold:
            continue

        nearFound = False
        for e in electrodes:
            if distance(e.centerPos, minEllipse[i][0]) < 20:
                nearFound = True
                break

        if not nearFound:
            centerPos = (int(minEllipse[i][0][0]), int(minEllipse[i][0][1]))
            electrodes.append(ElectrodeContour(minEllipse[i], c, centerPos, (0, 255, 255), "X"))


    # Calculate Colors for each electrode
    for i, e in enumerate(electrodes):
        area = cv2.contourArea(e.contour)

        mask = np.zeros(dilate.shape, np.uint8)
        cv2.drawContours(mask, [e.contour], -1, 255, cv2.FILLED)

        radius = max(e.ellipse[1]) / 2

        element = cv2.getStructuringElement(cv2.MORPH_ERODE, (int(radius / 10) + 1, int(radius / 10) + 1), (int(radius / 10), int(radius / 10)))
        mask = cv2.erode(mask, element)

        #element = cv2.getStructuringElement(cv2.MORPH_ERODE, (2 * int(area/erodeDivider) + 1, 2 * int(area/erodeDivider) + 1), (int(area/erodeDivider), int(area/erodeDivider)))
        #mask = cv2.erode(mask, element)

        element2 = cv2.getStructuringElement(cv2.MORPH_ERODE, (2 * int(area/erodeDivider) + 1, 2 * int(area/erodeDivider) + 1), (int(area/erodeDivider), int(area/erodeDivider)))
        maskSmall = cv2.erode(mask, element2)
        mask = cv2.bitwise_xor(mask, maskSmall)

        totalMask = cv2.bitwise_or(totalMask, cv2.bitwise_and(img, img, mask=mask))

        #cv2.imshow("maskSmall", maskSmall)
        #cv2.imshow("masked", cv2.bitwise_and(img, img, mask=mask))

        mean = cv2.mean(hsv, mask)
        hue = mean[0] * 2

        colStr = ""
        if hue > 0 and hue < colorYGThresh:
            colStr = "Y"
        elif hue > colorYGThresh and hue < 150:
            colStr = "G"
        elif hue > 240 and hue < 330:
            colStr = "P"
        else:
            colStr = "X"

        electrodes[i].colorStr = colStr

        colStr += ": " + str(int(hue))

        colImg = np.uint8([[[mean[0], 255, 255]]])
        colBGR = cv2.cvtColor(colImg, cv2.COLOR_HSV2BGR)

        color = (int(colBGR[0][0][0]), int(colBGR[0][0][1]), int(colBGR[0][0][2]), 0.0)
        electrodes[i].color = color

        # Draw Ellipsis
        cv2.ellipse(img, e.ellipse, color, 2)

        # Draw Color Text
        #cv2.putText(img, colStr, e.centerPos, cv2.FONT_HERSHEY_SIMPLEX, 1, color, 2, cv2.LINE_AA)


    class Electrode:
        def __init__(self, name, color, otherColors, distances):
            self.name = name
            self.color = color
            self.otherColors = otherColors
            self.distances = distances

    templateElectrodes = [
        Electrode("FP1", "P", ["P", "G", "P", "P", "X", "G", "Y", "X", "Y", "G", "X", "G", "P", "Y", "P"], [0.6588010992355083, 0.6627746097131518, 0.6665810719980223, 0.6710872112963941, 0.6713471133998647, 0.6791818975427315, 0.7296262658812713, 0.7428882447879431, 0.7581200344865663, 0.7724111429746362, 0.7887882489478962, 0.8080180445942062, 0.85417383160963, 0.9087328545401093, 1.0]),
Electrode("FPZ", "P", ["G", "G", "G", "G", "P", "X", "G", "G", "X", "P", "X", "P", "Y", "Y", "P"], [0.6247795130847544, 0.6267521894764265, 0.6326017018378314, 0.6385694873863439, 0.6603629977206213, 0.707527415063241, 0.7095249055733153, 0.711737311082911, 0.7164715946115802, 0.8060826368930404, 0.8171142623870529, 0.85417383160963, 0.8711130998286896, 0.8912149157726128, 1.0]),
Electrode("FP2", "P", ["P", "P", "P", "G", "P", "G", "Y", "X", "Y", "X", "P", "G", "G", "Y", "P"], [0.6490382090737687, 0.6623366617472516, 0.6665810719980224, 0.6853251145862126, 0.6973856810098387, 0.7025224012055776, 0.7361989388900542, 0.7445976301291037, 0.7467848137227941, 0.764369980579005, 0.8060826368930406, 0.8321832179176621, 0.8361739799535058, 0.8871996574774563, 1.0]),
Electrode("AFP3H", "Y", ["P", "G", "G", "Y", "G", "P", "P", "X", "X", "G", "Y", "X", "P", "P", "Y"], [0.6829574869927907, 0.7016434433580987, 0.7074819922312655, 0.7163722081353249, 0.7251975685788655, 0.7344525664443464, 0.7361989388900538, 0.7599602807695488, 0.8028124820809032, 0.8181354886206911, 0.8396329814859281, 0.8774456656068885, 0.8912149157726127, 0.9087328545401091, 1.0]),
Electrode("AFP4H", "Y", ["G", "P", "Y", "P", "G", "X", "G", "P", "X", "Y", "G", "P", "X", "P", "Y"], [0.6895893297738713, 0.7064172810449458, 0.7115146819563987, 0.7382925294154239, 0.7397790071617447, 0.7450618524970914, 0.749120575151345, 0.7581200344865662, 0.8200583604776573, 0.839632981485928, 0.8406121981888632, 0.8711130998286895, 0.8739061343869153, 0.8871996574774561, 1.0]),
Electrode("AF7", "G", ["X", "G", "G", "P", "X", "Y", "X", "P", "P", "Y", "G", "G", "Y", "P", "G"], [0.6474061500648299, 0.6603027027807065, 0.663425315965638, 0.6643203751898101, 0.6698530763022152, 0.7074819922312655, 0.7291242240205278, 0.7415904006947834, 0.7724111429746362, 0.7842553883799913, 0.7970287440429843, 0.8263978685196017, 0.8336812611936446, 0.8491419937136531, 1.0]),
Electrode("AF3", "G", ["X", "Y", "P", "X", "X", "G", "X", "P", "G", "Y", "G", "P", "X", "Y", "G"], [0.7242264678654747, 0.763829293244026, 0.7720488548036075, 0.7733624491295467, 0.7846421027545968, 0.7970287440429843, 0.801169878802837, 0.808018044594206, 0.8088966189704198, 0.818135488620691, 0.8521732229988207, 0.8613662858228671, 0.872731404953313, 0.8917150930529069, 1.0]),
Electrode("AFZ", "X", ["Y", "P", "Y", "G", "P", "G", "G", "G", "P", "P", "X", "Y", "Y", "X", "X"], [0.7510207796400147, 0.7643699805790047, 0.7658969357217346, 0.7858452421539704, 0.7887882489478961, 0.7899328780646457, 0.7993152026666073, 0.8011698788028371, 0.8171142623870529, 0.8432434230531903, 0.8709797200583757, 0.8739061343869153, 0.8774456656068883, 0.8823764503090286, 1.0]),
Electrode("AF4", "G", ["P", "P", "Y", "X", "X", "X", "G", "G", "P", "Y", "P", "G", "X", "Y", "G"], [0.7193423482021748, 0.7638806924798165, 0.76463976154461, 0.7819441314972229, 0.7842847722364049, 0.7993152026666073, 0.7993335650229608, 0.817021399214506, 0.8361739799535055, 0.840612198188863, 0.858287883032659, 0.8589067237189955, 0.8619603557859175, 0.8650635684806117, 1.0]),
Electrode("AF8", "G", ["X", "G", "P", "X", "G", "X", "Y", "P", "Y", "G", "G", "P", "P", "Y", "G"], [0.6583623045960367, 0.6680788883920052, 0.6768691978547245, 0.6794280884262149, 0.6892810738730958, 0.7385680413019554, 0.7397790071617446, 0.7403662186717335, 0.7456763320174571, 0.8052765967105329, 0.817021399214506, 0.8248087608751584, 0.8321832179176619, 0.8416916794387455, 1.0]),
Electrode("AFF5H", "Y", ["Y", "P", "P", "G", "X", "X", "G", "P", "Y", "G", "X", "G", "P", "G", "Y"], [0.7295044510689899, 0.7296262658812712, 0.7543162618252581, 0.7708153591274051, 0.7888866893695804, 0.8135441845132767, 0.8144919457266376, 0.8164298743741362, 0.8217843804568621, 0.8336812611936446, 0.865602010905049, 0.8917150930529067, 0.9079046199147173, 0.916957139243594, 1.0]),
Electrode("AFF1", "X", ["P", "G", "G", "Y", "X", "Y", "Y", "P", "X", "Y", "X", "G", "P", "G", "X"], [0.7649427867820788, 0.770599434970027, 0.7747158214243578, 0.7888866893695804, 0.7985138640284024, 0.8028124820809031, 0.8056767509278893, 0.8198347261622249, 0.8412956041584202, 0.8587215593124394, 0.8709797200583758, 0.872731404953313, 0.898845803443995, 0.9143624492984239, 1.0]),
Electrode("AFF2", "X", ["Y", "P", "G", "G", "Y", "X", "Y", "P", "X", "G", "Y", "X", "P", "G", "X"], [0.7599602807695487, 0.7656043739131931, 0.7732962146548603, 0.7810683936128793, 0.7937073771524586, 0.794640547364345, 0.8200583604776572, 0.8210856223741623, 0.8412956041584202, 0.8619603557859173, 0.8655504566803174, 0.8823764503090284, 0.8997799963801086, 0.9074435867251354, 1.0]),
Electrode("AFF6H", "Y", ["P", "P", "X", "G", "P", "Y", "G", "X", "P", "G", "G", "P", "X", "G", "Y"], [0.723458297982194, 0.7467848137227939, 0.7548270276837363, 0.7851560741278125, 0.7942323513299216, 0.803150387216197, 0.8069489136506044, 0.811053724334487, 0.8402277857661802, 0.8416916794387455, 0.8650635684806118, 0.8875701971411587, 0.8911334468886246, 0.9334370969596617, 1.0]),
Electrode("F7", "P", ["X", "G", "G", "Y", "Y", "X", "P", "P", "X", "G", "Y", "G", "G", "Y", "P"], [0.6836178660110689, 0.6877770050863655, 0.7211765817018745, 0.7262840330412709, 0.731040320965147, 0.7350695417758862, 0.7493562115068133, 0.7903837415309396, 0.7989816316149514, 0.811020588631139, 0.8164298743741362, 0.849141993713653, 0.881338862234886, 0.9170874005306922, 1.0]),
Electrode("F5", "G", ["Y", "X", "G", "G", "G", "X", "G", "P", "G", "P", "P", "X", "Y", "Y", "G"], [0.7251201195141423, 0.7433538562912142, 0.7510550665436162, 0.7550976081584846, 0.7867560434029841, 0.7895170831016306, 0.8088966189704198, 0.8240728825712903, 0.8263978685196017, 0.8676849229396968, 0.8813388622348861, 0.9008793277272523, 0.9046208100250848, 0.916957139243594, 1.0]),
Electrode("F3", "P", ["P", "X", "P", "Y", "Y", "P", "X", "G", "G", "G", "G", "X", "X", "Y", "P"], [0.7512323914017255, 0.7647911918539811, 0.7685164677439884, 0.7846456956621903, 0.8076580004366641, 0.8146124505542636, 0.8198347261622249, 0.8447860859291535, 0.8613662858228669, 0.8676849229396968, 0.8793272033093568, 0.896165394781078, 0.9054063392456344, 0.9079046199147173, 1.0]),
Electrode("F1", "G", ["X", "G", "X", "X", "Y", "G", "Y", "P", "G", "P", "P", "X", "Y", "X", "G"], [0.7810683936128793, 0.7814524733875075, 0.7820094296273737, 0.7858452421539704, 0.8008746351262005, 0.8122583285855279, 0.8144919457266377, 0.8452871080866581, 0.8521732229988207, 0.8714214883188918, 0.8793272033093569, 0.8830740079691803, 0.9101534943526393, 0.9143624492984239, 1.0]),
Electrode("FZ", "P", ["G", "X", "G", "X", "P", "P", "X", "G", "G", "G", "Y", "X", "X", "Y", "P"], [0.7638806924798165, 0.7694610775502523, 0.7720488548036074, 0.7740207434350894, 0.778388942843115, 0.7854631408093946, 0.8432434230531903, 0.8499635920256186, 0.8617141251430293, 0.8714214883188918, 0.8931313122666534, 0.8988458034439948, 0.8997799963801085, 0.9057707898520263, 1.0]),
Electrode("F2", "G", ["X", "Y", "X", "G", "X", "G", "Y", "P", "G", "P", "X", "P", "Y", "X", "G"], [0.770599434970027, 0.779692028725317, 0.7899328780646457, 0.7945923266947214, 0.7974016949963908, 0.8025135605031313, 0.8069489136506044, 0.8446202455203733, 0.8589067237189955, 0.8617141251430293, 0.8869827840927262, 0.90176190716405, 0.9017884256558738, 0.9074435867251354, 1.0]),
Electrode("F4", "P", ["X", "P", "P", "X", "X", "Y", "P", "G", "G", "G", "Y", "X", "G", "X", "P"], [0.744777231054912, 0.763806517718349, 0.7700548405341846, 0.7730719958866056, 0.8210856223741623, 0.8215460017796933, 0.8322305581533508, 0.8550524610763415, 0.858287883032659, 0.8604575420754745, 0.8875701971411587, 0.8943359205282099, 0.90176190716405, 0.9170470710556455, 1.0]),
Electrode("F6", "G", ["Y", "G", "G", "X", "G", "X", "G", "G", "P", "P", "Y", "P", "X", "Y", "G"], [0.7361066864060418, 0.7653682867173738, 0.7717874948958691, 0.7733438060032379, 0.7993335650229608, 0.8036781405494398, 0.8052765967105331, 0.8092599342893428, 0.8588672107413763, 0.8604575420754745, 0.8625013509746735, 0.8765444668501935, 0.9257171360826594, 0.9334370969596617, 1.0]),
Electrode("F8", "P", ["G", "X", "Y", "G", "X", "P", "Y", "X", "P", "G", "Y", "G", "G", "Y", "P"], [0.6987463166834113, 0.7073329805007624, 0.7146889815748695, 0.719342348202175, 0.7203342155097724, 0.739617867559023, 0.7507819095115186, 0.8096093177974906, 0.8203973556916916, 0.8248087608751584, 0.8402277857661804, 0.8423955364075552, 0.8765444668501937, 0.9178715882287445, 1.0]),
Electrode("FFT7H", "Y", ["G", "X", "Y", "G", "X", "G", "P", "Y", "Y", "G", "X", "P", "G", "P", "Y"], [0.7142612742254356, 0.7258853324917011, 0.7502503520894982, 0.7598816975449855, 0.7664270581244472, 0.7842553883799912, 0.7846456956621903, 0.8007966597742204, 0.8217843804568621, 0.8498643211930065, 0.8619447687022577, 0.8728979885154945, 0.9046208100250848, 0.9170874005306922, 1.0]),
Electrode("FFC5H", "X", ["Y", "G", "P", "G", "X", "P", "X", "Y", "X", "Y", "P", "G", "P", "G", "X"], [0.7608942840125054, 0.7733624491295467, 0.7790829971598462, 0.7820094296273737, 0.786662972143486, 0.7989816316149514, 0.8285568612414157, 0.8619447687022577, 0.8627062493002811, 0.865602010905049, 0.8722802681199576, 0.8853901396361173, 0.896165394781078, 0.9008793277272525, 1.0]),
Electrode("FFC3H", "X", ["X", "G", "G", "G", "Y", "X", "Y", "X", "Y", "X", "G", "G", "P", "P", "X"], [0.7762013293053766, 0.7846421027545967, 0.7853128724883712, 0.7895170831016304, 0.7983931253734772, 0.7985138640284023, 0.8135441845132766, 0.8484208337065142, 0.8598124424606254, 0.8627062493002811, 0.8830740079691803, 0.8980051210100164, 0.9054063392456343, 0.9072628746020016, 1.0]),
Electrode("FFC1H", "Y", ["G", "P", "G", "Y", "X", "P", "Y", "X", "X", "Y", "P", "P", "G", "G", "Y"], [0.7677608135702398, 0.7767642458994669, 0.7796920287253168, 0.7901405962654333, 0.7937073771524586, 0.8076580004366641, 0.8261191526377346, 0.8587215593124394, 0.8598124424606254, 0.867594331467481, 0.8852508908687817, 0.8931313122666535, 0.9019688805958979, 0.9101534943526393, 1.0]),
Electrode("FFC2H", "Y", ["Y", "P", "G", "G", "X", "P", "Y", "X", "X", "Y", "P", "G", "G", "P", "Y"], [0.7688531537198584, 0.7710863053738763, 0.7726740101028667, 0.8008746351262007, 0.8056767509278893, 0.8215460017796932, 0.8378242493986232, 0.8572621267102625, 0.8655504566803173, 0.867594331467481, 0.8796463019479502, 0.8994386305674268, 0.9017884256558738, 0.9057707898520263, 1.0]),
Electrode("FFC4H", "X", ["G", "G", "G", "X", "G", "Y", "Y", "X", "Y", "X", "G", "G", "P", "P", "X"], [0.7806859057930247, 0.7842847722364048, 0.7942205370405523, 0.7946405473643449, 0.8036781405494398, 0.811053724334487, 0.8222159284650932, 0.8475075726492755, 0.8572621267102625, 0.8656406568387621, 0.8869827840927262, 0.9065719317571588, 0.9122699473408553, 0.9170470710556454, 1.0]),
Electrode("FFC6H", "X", ["P", "G", "P", "X", "G", "P", "Y", "X", "X", "P", "G", "Y", "P", "G", "X"], [0.7456287352267973, 0.7819441314972229, 0.7856525399512292, 0.7877916003934023, 0.7974016949963908, 0.8096093177974903, 0.8217467527406559, 0.8268224456987523, 0.8656406568387623, 0.8752796556233057, 0.8835148501085133, 0.8911334468886245, 0.8943359205282099, 0.9257171360826594, 1.0]),
Electrode("FFT8H", "Y", ["X", "P", "G", "G", "G", "Y", "X", "Y", "X", "Y", "G", "P", "G", "P", "Y"], [0.7268684198853623, 0.7273748595971912, 0.7302046486104259, 0.7382517704820492, 0.7456763320174571, 0.7673882635787678, 0.7709671800880434, 0.803150387216197, 0.8217467527406559, 0.8328347511829688, 0.8625013509746735, 0.8847017594516682, 0.907967910019494, 0.9178715882287443, 1.0]),
Electrode("FT9", "X", ["G", "Y", "X", "G", "P", "G", "G", "P", "Y", "P", "Y", "P", "G", "Y", "X"], [0.552865897209241, 0.5577677780812811, 0.5733940656040786, 0.5788932464726173, 0.5910774798969092, 0.6251332206025685, 0.6262575870991673, 0.6482660821454078, 0.6890753114927444, 0.7072031784044795, 0.7087637122930401, 0.7350695417758862, 0.7986221981750281, 0.8398843133353889, 1.0]),
Electrode("FT7", "G", ["Y", "G", "Y", "X", "X", "G", "G", "X", "P", "P", "P", "Y", "Y", "Y", "G"], [0.6720561226174797, 0.6796415707161335, 0.7058309585290415, 0.7440426108270547, 0.7510513199373362, 0.7550976081584846, 0.7671885489760494, 0.798622198175028, 0.811020588631139, 0.8238680154358505, 0.8448797283167522, 0.8498643211930066, 0.8818848389067412, 0.8980108888748061, 1.0]),
Electrode("FC5", "P", ["Y", "X", "X", "X", "P", "P", "G", "G", "G", "G", "X", "Y", "Y", "X", "P"], [0.7543162618252581, 0.7566718807153231, 0.7568121007603323, 0.7575974423384707, 0.7685164677439884, 0.7903837415309396, 0.8240728825712903, 0.832934825122511, 0.8342696694135642, 0.8448797283167521, 0.8722802681199576, 0.8728979885154945, 0.8886105922603417, 0.8890708076950076, 1.0]),
Electrode("FC3", "G", ["X", "Y", "Y", "Y", "G", "G", "G", "P", "P", "P", "X", "X", "X", "X", "G"], [0.7652675446659299, 0.7677608135702401, 0.7708153591274051, 0.7774537842649112, 0.7814524733875075, 0.7867560434029841, 0.7972321468339232, 0.8342696694135642, 0.8447860859291535, 0.8600145792555506, 0.8775978234519309, 0.8853901396361175, 0.8980051210100164, 0.901197223927687, 1.0]),
Electrode("FC1", "P", ["Y", "Y", "P", "X", "P", "P", "G", "G", "G", "G", "X", "Y", "Y", "X", "P"], [0.7710863053738761, 0.7713148378385667, 0.778388942843115, 0.7790829971598462, 0.7996295045858454, 0.8146124505542633, 0.8396643549265622, 0.8452871080866581, 0.8539309145348856, 0.8600145792555505, 0.8816473925133956, 0.8852508908687817, 0.8907875708214238, 0.9072628746020014, 1.0]),
Electrode("FCZ", "G", ["X", "X", "X", "X", "G", "G", "P", "P", "P", "P", "Y", "Y", "Y", "Y", "G"], [0.7732962146548603, 0.7747158214243579, 0.785312872488371, 0.7942205370405523, 0.8025135605031314, 0.8122583285855279, 0.8322236362232038, 0.8499635920256186, 0.8539309145348855, 0.8624726790200883, 0.8693743255423096, 0.8880748466117758, 0.8994386305674268, 0.901968880595898, 1.0]),
Electrode("FC2", "P", ["P", "Y", "P", "X", "P", "P", "G", "G", "G", "G", "X", "Y", "Y", "X", "P"], [0.7698645518320546, 0.7767642458994669, 0.7854631408093946, 0.7856525399512292, 0.7914551240653115, 0.8322305581533508, 0.8446202455203733, 0.8446405529118447, 0.8624726790200883, 0.871396527098208, 0.8779410689580617, 0.8796463019479502, 0.9097528435340626, 0.9122699473408553, 1.0]),
Electrode("FC4", "G", ["Y", "Y", "G", "Y", "G", "G", "P", "P", "P", "X", "P", "X", "X", "X", "G"], [0.7726740101028668, 0.7851560741278127, 0.7945923266947214, 0.8028438274076328, 0.8092599342893431, 0.8169952241910617, 0.8278544743764678, 0.8390329308893534, 0.8550524610763415, 0.868613442788998, 0.871396527098208, 0.8835148501085132, 0.9039474052197232, 0.9065719317571588, 1.0]),
Electrode("FC6", "P", ["X", "X", "P", "P", "Y", "P", "G", "G", "G", "G", "Y", "X", "Y", "X", "P"], [0.758028329188294, 0.761205721336155, 0.7700548405341846, 0.7744095870932033, 0.7942323513299216, 0.8203973556916911, 0.8217060978241758, 0.8278544743764679, 0.840789433796501, 0.8588672107413761, 0.8671415222863965, 0.8752796556233058, 0.8847017594516682, 0.885519927147766, 1.0]),
Electrode("FT8", "G", ["G", "Y", "Y", "X", "X", "G", "G", "X", "P", "P", "P", "Y", "Y", "Y", "G"], [0.6690959206311267, 0.7111512968026845, 0.7142969778654871, 0.7414403647955019, 0.7460932444525784, 0.7620329325652188, 0.7717874948958692, 0.7851757537527952, 0.7884528376385534, 0.8407894337965012, 0.8423955364075549, 0.858383597015541, 0.8756760597907267, 0.907967910019494, 1.0]),
Electrode("FT10", "X", ["P", "X", "Y", "G", "Y", "G", "G", "P", "Y", "P", "P", "Y", "G", "Y", "X"], [0.5451920877674028, 0.5495961765026901, 0.5606326091056947, 0.5698977269832137, 0.5780674576169834, 0.6023481452030507, 0.602770387785841, 0.6285539574299114, 0.6812921313677043, 0.6977800737228604, 0.7203342155097724, 0.7268684198853623, 0.7851757537527954, 0.8410498631217599, 1.0]),
Electrode("FTT9H", "Y", ["P", "X", "G", "X", "G", "Y", "P", "G", "Y", "P", "Y", "X", "P", "G", "Y"], [0.6379815149232879, 0.6433290573693907, 0.6549013314972745, 0.6777726445190402, 0.7014212323120881, 0.7174256641680133, 0.7262840330412709, 0.7310588254318321, 0.7502503520894983, 0.7535522258031928, 0.8309758365978649, 0.8398843133353889, 0.8651762374187713, 0.8980108888748062, 1.0]),
Electrode("FTT7H", "Y", ["G", "P", "G", "P", "X", "X", "Y", "Y", "Y", "X", "P", "G", "G", "P", "Y"], [0.7307643081042179, 0.731040320965147, 0.741963795819244, 0.7464700661482302, 0.7608942840125054, 0.7852818676366369, 0.8007966597742204, 0.8051899757457307, 0.8309758365978649, 0.8449846315072183, 0.8650349109726887, 0.8818848389067412, 0.8852968816396671, 0.8886105922603417, 1.0]),
Electrode("FCC5H", "X", ["G", "Y", "G", "G", "Y", "X", "X", "X", "X", "Y", "X", "G", "G", "P", "X"], [0.7510513199373361, 0.7535056203821967, 0.7566234969599636, 0.7650276770625204, 0.7664270581244471, 0.7762013293053766, 0.7815931241931817, 0.8285568612414157, 0.8429359203168196, 0.8449846315072183, 0.8498997026388936, 0.8775978234519312, 0.8817161938946804, 0.8890708076950076, 1.0]),
Electrode("FCC3H", "X", ["P", "Y", "P", "P", "X", "X", "Y", "X", "X", "Y", "X", "P", "G", "G", "X"], [0.764791191853981, 0.7670588938548639, 0.7687307668193653, 0.775428378175791, 0.776628705715801, 0.7866629721434859, 0.7889777403410161, 0.8429359203168194, 0.8484208337065142, 0.8508373393554591, 0.8519716762435339, 0.8816473925133956, 0.8955504761801275, 0.901197223927687, 1.0]),
Electrode("FCC1H", "Y", ["Y", "P", "G", "X", "Y", "X", "Y", "Y", "Y", "X", "G", "P", "G", "P", "Y"], [0.7688531537198582, 0.76901776223246, 0.7774537842649111, 0.7911017740071881, 0.7973425338689514, 0.7983931253734771, 0.8261191526377344, 0.84078928473896, 0.8468382237794277, 0.8508373393554591, 0.8693743255423095, 0.8907875708214238, 0.8943082747410692, 0.9082828904563419, 1.0]),
Electrode("FCC2H", "Y", ["G", "P", "X", "Y", "G", "X", "Y", "Y", "Y", "X", "P", "G", "G", "P", "Y"], [0.7686270715256128, 0.7713148378385667, 0.7742822427512427, 0.7901405962654333, 0.8028438274076328, 0.8222159284650932, 0.8300384069012107, 0.8378242493986232, 0.8468382237794276, 0.8581182454537271, 0.8816955912960568, 0.8844531877323071, 0.8880748466117758, 0.9097528435340626, 1.0]),
Electrode("FCC4H", "X", ["P", "X", "P", "P", "X", "Y", "X", "X", "X", "Y", "P", "P", "G", "G", "X"], [0.7685965733610629, 0.7701609592134886, 0.7723509704343121, 0.7730719958866056, 0.7877916003934022, 0.7974053048821145, 0.8448087900036241, 0.8475075726492755, 0.8494474468680068, 0.8581182454537272, 0.8779410689580617, 0.8917393788663938, 0.9039474052197232, 0.9115435183037321, 1.0]),
Electrode("FCC6H", "X", ["G", "Y", "G", "G", "X", "X", "X", "Y", "X", "X", "G", "G", "P", "P", "X"], [0.7572616832292336, 0.7709671800880434, 0.7722415758090021, 0.773343806003238, 0.7764356804321344, 0.7847560714462184, 0.8268224456987523, 0.8312229909122423, 0.8395564585906136, 0.8448087900036241, 0.868613442788998, 0.8727386367596609, 0.885519927147766, 0.8883060677169475, 1.0]),
Electrode("FTT8H", "Y", ["G", "P", "X", "P", "P", "X", "Y", "Y", "X", "Y", "P", "P", "G", "G", "Y"], [0.7361066864060418, 0.7392497447742067, 0.7424295244988482, 0.7460522506148406, 0.7507819095115184, 0.7755020253934698, 0.8112349071528114, 0.8219611409111711, 0.8312229909122423, 0.8328347511829689, 0.8439107998028249, 0.8671415222863966, 0.8756760597907267, 0.8852396240791394, 1.0]),
Electrode("FTT10H", "Y", ["P", "G", "X", "P", "G", "G", "P", "P", "Y", "Y", "Y", "X", "P", "G", "Y"], [0.621765732968746, 0.6303303177294972, 0.6442217920141788, 0.6484622288737903, 0.694104184906784, 0.7122615764714169, 0.7131317065298618, 0.7146889815748693, 0.7368322748602271, 0.7673882635787678, 0.8112349071528115, 0.8410498631217599, 0.8560419188020848, 0.858383597015541, 1.0]),
Electrode("T7", "P", ["Y", "X", "X", "Y", "X", "X", "P", "P", "G", "G", "G", "Y", "Y", "Y", "P"], [0.6882473841368301, 0.6938975550080433, 0.7072031784044795, 0.7258632068964639, 0.7273397424352828, 0.7369555930725618, 0.7540280034131205, 0.7683979498920694, 0.8222075971722652, 0.8238680154358505, 0.8304428111616227, 0.8495747968008195, 0.8650349109726887, 0.8651762374187713, 1.0]),
Electrode("C5", "G", ["X", "X", "X", "G", "G", "G", "G", "P", "P", "P", "Y", "X", "Y", "X", "G"], [0.7443859069339205, 0.7473469326102048, 0.7547063980132971, 0.7595047733329027, 0.7671885489760492, 0.7695543797222091, 0.7916948322334836, 0.8222075971722651, 0.8329348251225112, 0.8431574341354302, 0.870847017982713, 0.8817161938946806, 0.885296881639667, 0.8991754771496006, 1.0]),
Electrode("C3", "P", ["P", "X", "Y", "X", "P", "P", "P", "G", "G", "G", "G", "X", "X", "X", "X"], [0.8488789143310741, 0.8498837833589208, 0.852850486968895, 0.8635375201221328, 0.8662061628732913, 0.8765949873693804, 0.8871291805121829, 0.9356580016574254, 0.9441260322581945, 0.9450596687010449, 0.9504482714117327, 0.9864500623564323, 0.9899799488989306, 0.9979664286477233, 1.0]),
Electrode("C1", "G", ["G", "X", "X", "Y", "G", "G", "G", "P", "P", "P", "Y", "Y", "X", "X", "G"], [0.7643286779231546, 0.7672787174683848, 0.7738028509846288, 0.7773016285819588, 0.7805273578328863, 0.7972321468339232, 0.7994257942362323, 0.8396643549265621, 0.8484741569825911, 0.8581919580258902, 0.8929267521281811, 0.8943082747410691, 0.8955504761801275, 0.8967653688361952, 1.0]),
Electrode("CZ", "P", ["X", "X", "P", "P", "P", "P", "G", "G", "G", "G", "Y", "Y", "Y", "Y", "P"], [0.7723509704343119, 0.775428378175791, 0.7757015621585163, 0.7770104841978969, 0.7914551240653113, 0.7996295045858455, 0.8310283540922339, 0.8322236362232038, 0.8449072793146548, 0.8581919580258903, 0.8785812729128336, 0.8816955912960567, 0.8884778131217782, 0.9082828904563418, 1.0]),
Electrode("C2", "G", ["G", "X", "G", "X", "G", "G", "P", "P", "P", "P", "Y", "Y", "X", "X", "G"], [0.7716246318094474, 0.7722415758090021, 0.7725949483709594, 0.7806859057930247, 0.7898522318377603, 0.8169952241910616, 0.8380872505740171, 0.8446405529118447, 0.8449072793146548, 0.859802204648673, 0.8844531877323071, 0.8857910481662009, 0.8895818238939354, 0.9115435183037319, 1.0]),
Electrode("C4", "P", ["P", "X", "P", "Y", "P", "P", "G", "G", "G", "G", "X", "X", "X", "X", "P"], [0.7637321381702805, 0.7676473842349635, 0.7698645518320546, 0.7731391595743521, 0.7744095870932032, 0.8013959202321049, 0.8268891764018006, 0.8390329308893534, 0.8509681546785526, 0.8598022046486731, 0.8783479000784804, 0.8883060677169474, 0.891739378866394, 0.8964439809489647, 1.0]),
Electrode("C6", "G", ["G", "X", "X", "G", "G", "G", "P", "P", "P", "P", "Y", "X", "Y", "X", "G"], [0.7415280887333691, 0.7463786323547004, 0.746442153699588, 0.754345924381162, 0.7620329325652188, 0.7739859462381085, 0.8017275045564636, 0.8217060978241758, 0.8268891764018007, 0.8436500534241442, 0.8652394602763505, 0.8727386367596609, 0.8852396240791393, 0.8899175291853564, 1.0]),
Electrode("T8", "P", ["X", "X", "Y", "P", "X", "P", "Y", "P", "G", "G", "G", "Y", "Y", "Y", "P"], [0.692675705240704, 0.6977800737228604, 0.7065545406258341, 0.7113823556880741, 0.714384508683867, 0.720910423972101, 0.7276159506086775, 0.7567082624766762, 0.7884528376385534, 0.8017275045564639, 0.8336856183079675, 0.8439107998028249, 0.8560419188020848, 0.8751542533194379, 1.0]),
Electrode("M1", "P", ["P", "Y", "X", "G", "Y", "P", "X", "Y", "Y", "P", "G", "Y", "X", "X", "P"], [0.4954426021267574, 0.4972965655079161, 0.5067619404571718, 0.5167045291360178, 0.5548626428956502, 0.5858900097620504, 0.5910774798969091, 0.5911862586680939, 0.6179325992899849, 0.6277572958749514, 0.6442799491439964, 0.648882695258636, 0.6788415901460307, 0.7637589256661571, 1.0]),
Electrode("TTP7H", "Y", ["Y", "X", "X", "P", "G", "G", "Y", "X", "Y", "X", "P", "G", "G", "P", "Y"], [0.725588813484327, 0.7535056203821967, 0.7560719110863849, 0.7620563947146239, 0.772001557906989, 0.7834223794157702, 0.8051899757457307, 0.8055148234705183, 0.8358439946219598, 0.8455984569073369, 0.8495747968008195, 0.870847017982713, 0.8953552566272186, 0.9183891410083532, 1.0]),
Electrode("CCP5H", "X", ["G", "P", "P", "P", "X", "Y", "X", "X", "X", "Y", "X", "P", "G", "G", "X"], [0.7500582267294849, 0.757597442338471, 0.7678676618167134, 0.7703597014243756, 0.7766287057158012, 0.7852818676366371, 0.7941206038207885, 0.8323297197887474, 0.8331247284594537, 0.845598456907337, 0.8498997026388936, 0.8766123301462866, 0.8924358226969008, 0.8991754771496007, 1.0]),
Electrode("CCP3H", "X", ["X", "P", "G", "X", "G", "Y", "Y", "X", "X", "X", "Y", "G", "G", "P", "X"], [0.7665664124538392, 0.7712790954586946, 0.7728485036666167, 0.7815931241931815, 0.7900373579233562, 0.7911017740071881, 0.7979941470136803, 0.8323297197887473, 0.8519716762435339, 0.8624362669594607, 0.8637746839250469, 0.8835856895687222, 0.8967653688361952, 0.9067523244778202, 1.0]),
Electrode("CCP1H", "Y", ["G", "P", "P", "X", "Y", "X", "Y", "Y", "Y", "X", "P", "G", "P", "G", "Y"], [0.7680272806775863, 0.7708284339672086, 0.7748617627871636, 0.7889777403410161, 0.7943061328919144, 0.8096285321376717, 0.84078928473896, 0.8461994512068002, 0.857819266369164, 0.8637746839250467, 0.8785812729128336, 0.8929267521281811, 0.8960333111164206, 0.9064989515114567, 1.0]),
Electrode("CCP2H", "Y", ["G", "G", "Y", "X", "Y", "X", "Y", "Y", "X", "Y", "G", "G", "P", "P", "Y"], [0.777301628581959, 0.7788522584871855, 0.7800639362924591, 0.7894492613050094, 0.7973425338689514, 0.7974053048821143, 0.8300384069012107, 0.8301956415742316, 0.8576282070868085, 0.857819266369164, 0.8856750950342623, 0.8857910481662009, 0.8884778131217782, 0.8885252187818677, 1.0]),
Electrode("CCP4H", "X", ["G", "X", "G", "Y", "X", "Y", "X", "X", "X", "Y", "G", "P", "G", "P", "X"], [0.7678784293072977, 0.7688727721901735, 0.7712784355509824, 0.7742822427512427, 0.7847560714462184, 0.7899615524767789, 0.8378363680786712, 0.8494474468680068, 0.8506395603751178, 0.8576282070868085, 0.8895818238939354, 0.8964439809489647, 0.9001736176869537, 0.904688128161339, 1.0]),
Electrode("CCP6H", "X", ["G", "Y", "P", "X", "Y", "X", "Y", "X", "X", "X", "P", "G", "P", "G", "X"], [0.7513940414599453, 0.7644902470988012, 0.7695956925347281, 0.7701609592134888, 0.7755020253934697, 0.7924102781273231, 0.818829918078129, 0.8342501047205938, 0.8378363680786712, 0.8395564585906136, 0.8783479000784804, 0.8838285677537974, 0.8851390415770114, 0.8899175291853563, 1.0]),
Electrode("TTP8H", "Y", ["G", "P", "G", "G", "Y", "X", "X", "X", "Y", "Y", "G", "P", "P", "G", "Y"], [0.7142969778654871, 0.715645106902637, 0.7225662670409171, 0.7234877758903072, 0.7368322748602271, 0.7379792200917935, 0.7675111725298573, 0.818829918078129, 0.8219611409111711, 0.8322048155685714, 0.8652394602763505, 0.8751542533194377, 0.8814184245803652, 0.8882739356337561, 1.0]),
Electrode("M2", "P", ["G", "Y", "X", "G", "P", "Y", "Y", "Y", "Y", "P", "P", "X", "G", "X", "P"], [0.5564518076259123, 0.565684774457992, 0.580631201790043, 0.5843119972790145, 0.6152119789152356, 0.6484622288737903, 0.6556592436199655, 0.687282306981962, 0.6943082316002572, 0.6974148852102392, 0.720910423972101, 0.7588313349365062, 0.782938284371147, 0.8321986708425181, 1.0]),
Electrode("TP7", "G", ["X", "Y", "Y", "X", "Y", "X", "G", "G", "P", "P", "P", "X", "Y", "Y", "G"], [0.7078107291622329, 0.7158842982483608, 0.7307643081042179, 0.7453129108304116, 0.7534842845248139, 0.7609165727388468, 0.7695543797222092, 0.7865888169827531, 0.8272855563600618, 0.8304428111616227, 0.8510253086311398, 0.8518307040770406, 0.8925982322617722, 0.8953552566272186, 1.0]),
Electrode("CP5", "P", ["X", "X", "P", "P", "Y", "P", "G", "G", "G", "Y", "G", "X", "X", "Y", "P"], [0.7470112951482434, 0.7611785543645327, 0.7683979498920692, 0.7846187812573379, 0.8000379247462427, 0.8051393517263893, 0.8391918204923808, 0.8431574341354302, 0.8476943800616953, 0.8502634337438524, 0.8510253086311398, 0.8766123301462865, 0.886882379575322, 0.9183891410083532, 1.0]),
Electrode("CP3", "G", ["Y", "Y", "G", "G", "Y", "G", "G", "P", "P", "P", "X", "X", "X", "X", "G"], [0.7720015579069889, 0.7797636348471462, 0.7805273578328865, 0.7827324613809592, 0.7915516493281635, 0.7916948322334836, 0.8118546759333647, 0.8391918204923807, 0.8541984477960866, 0.8595937363599948, 0.8815644072397322, 0.8835856895687224, 0.8924358226969007, 0.9015918991685026, 1.0]),
Electrode("CP1", "P", ["X", "P", "Y", "X", "P", "P", "G", "G", "G", "G", "Y", "Y", "X", "X", "P"], [0.7695269120293534, 0.775701562158516, 0.7765365427526063, 0.7826371456027381, 0.795554670349658, 0.8039683463288047, 0.8484741569825911, 0.8498013636801317, 0.8595937363599945, 0.862806899001714, 0.8912412410484419, 0.8960333111164206, 0.9067523244778201, 0.9132177704751075, 1.0]),
Electrode("CPZ", "G", ["X", "X", "G", "X", "G", "G", "P", "P", "P", "P", "Y", "Y", "Y", "Y", "G"], [0.7789939944479931, 0.790037357923356, 0.7928522085462174, 0.7963539330275552, 0.7994257942362323, 0.8099178763140313, 0.8310283540922339, 0.8459664131903878, 0.8496631760897428, 0.8628068990017143, 0.8856750950342623, 0.8877201951129431, 0.8939887333816997, 0.9064989515114568, 1.0]),
Electrode("CP2", "P", ["Y", "Y", "P", "P", "P", "P", "G", "G", "G", "G", "Y", "Y", "X", "X", "P"], [0.7716347681489675, 0.7748617627871636, 0.7770104841978969, 0.7822006303363801, 0.7966832041444198, 0.8013959202321048, 0.8380872505740173, 0.849663176089743, 0.8517976192575785, 0.8752626621375564, 0.8851184094030183, 0.8885252187818677, 0.9005031558521829, 0.904688128161339, 1.0]),
Electrode("CP4", "G", ["G", "G", "Y", "Y", "G", "G", "P", "P", "P", "X", "P", "X", "X", "X", "G"], [0.7718278209664601, 0.7739859462381082, 0.7788522584871856, 0.7891528025096598, 0.7898522318377603, 0.8036806494132037, 0.8274995859091231, 0.8358800407854945, 0.8509681546785526, 0.8686793438271652, 0.8752626621375565, 0.8838285677537971, 0.9001736176869537, 0.905931233304502, 1.0]),
Electrode("CP6", "P", ["Y", "P", "P", "P", "X", "P", "G", "G", "G", "G", "Y", "Y", "X", "X", "P"], [0.7506339853102337, 0.7567082624766762, 0.7592486075057094, 0.7637321381702806, 0.7661468566270968, 0.7778819775820486, 0.8193702004907354, 0.8274995859091232, 0.8314999205818807, 0.8436500534241442, 0.8782494644500042, 0.8814184245803652, 0.8842444223306781, 0.8851390415770115, 1.0]),
Electrode("TP8", "G", ["X", "Y", "Y", "X", "X", "G", "G", "P", "P", "X", "P", "P", "Y", "Y", "G"], [0.7009707429099735, 0.7071868406702553, 0.7204302874289753, 0.730323277858525, 0.7482833957948061, 0.7488415050576366, 0.754345924381162, 0.7829382843711468, 0.7945500980476753, 0.8212695428107966, 0.8314999205818807, 0.8336856183079674, 0.8769693838966492, 0.8882739356337561, 1.0]),
Electrode("TPP9H", "X", ["Y", "P", "X", "Y", "X", "P", "Y", "G", "G", "X", "G", "Y", "Y", "P", "X"], [0.684031740495607, 0.6938975550080433, 0.7075840028282042, 0.7191674287913439, 0.7404261153334448, 0.7470112951482434, 0.756071911086385, 0.771439464635154, 0.7848321737338172, 0.835062216893989, 0.8518307040770408, 0.8909669225317894, 0.9003435932813998, 0.9070421471097023, 1.0]),
Electrode("TPP7H", "Y", ["X", "X", "G", "P", "G", "Y", "X", "Y", "Y", "P", "G", "X", "G", "P", "Y"], [0.7262646894251579, 0.7268881082253207, 0.7304194792676995, 0.7580172452223808, 0.773223551010169, 0.8057708400327263, 0.8146582266907919, 0.8181134186874027, 0.8358439946219598, 0.8502634337438524, 0.8775289903903197, 0.8909669225317894, 0.8925982322617722, 0.9261388750758617, 1.0]),
Electrode("CPP5H", "X", ["X", "P", "P", "Y", "G", "Y", "X", "G", "X", "G", "P", "Y", "G", "P", "X"], [0.7665664124538393, 0.7695269120293534, 0.7796277111780957, 0.8055148234705183, 0.8092428996450611, 0.8146582266907919, 0.8331247284594536, 0.8378477667721828, 0.8489666684396378, 0.8815644072397322, 0.8868823795753219, 0.8952976017065688, 0.9011678807654042, 0.9182568831440758, 1.0]),
Electrode("CPP3H", "X", ["X", "G", "P", "Y", "Y", "G", "X", "X", "X", "Y", "P", "G", "G", "P", "X"], [0.7941206038207884, 0.7963539330275552, 0.8038494095406771, 0.8059778479695082, 0.8096285321376717, 0.8118034352642394, 0.8238613991517576, 0.8489666684396378, 0.8624362669594607, 0.8735409423810624, 0.8822576040866805, 0.9015918991685025, 0.9039515592963454, 0.9132177704751075, 1.0]),
Electrode("CPP1H", "Y", ["G", "Y", "P", "X", "X", "G", "Y", "Y", "X", "X", "P", "G", "G", "P", "Y"], [0.7797636348471461, 0.7800639362924593, 0.7901373872062134, 0.7979941470136805, 0.8041200937668357, 0.8088108751600238, 0.8461994512068005, 0.8662874295881016, 0.8678448372952757, 0.8735409423810625, 0.8912412410484423, 0.8939887333817, 0.8981991258880617, 0.9125412196913412, 1.0]),
Electrode("CPP2H", "Y", ["G", "G", "X", "Y", "X", "P", "Y", "X", "Y", "X", "P", "G", "P", "G", "Y"], [0.7826609558225156, 0.7891528025096598, 0.789961552476779, 0.7943061328919144, 0.8018690349148109, 0.8061761909949077, 0.8301956415742316, 0.8586084757381576, 0.8662874295881015, 0.8688922333148492, 0.8851184094030183, 0.8877201951129431, 0.89684079108938, 0.9221669073981152, 1.0]),
Electrode("CPP4H", "X", ["P", "G", "G", "Y", "X", "Y", "X", "X", "X", "Y", "P", "G", "P", "G", "X"], [0.7812446887805986, 0.7878880556187275, 0.7890733791199658, 0.7894492613050095, 0.7924102781273229, 0.7987987675598989, 0.8116339920682629, 0.8506395603751178, 0.8563024373211444, 0.8688922333148491, 0.8951130622323054, 0.8975665581987127, 0.900503155852183, 0.905931233304502, 1.0]),
Electrode("CPP6H", "X", ["Y", "P", "X", "P", "G", "G", "X", "Y", "Y", "X", "G", "P", "P", "G", "X"], [0.7675111725298573, 0.7685971054945767, 0.7688727721901737, 0.7803491215743374, 0.7845145621376668, 0.7898621571773271, 0.8342501047205938, 0.8529516554482702, 0.8530137767200169, 0.8563024373211444, 0.8686793438271653, 0.8842444223306781, 0.8934738182987346, 0.8990330145201186, 1.0]),
Electrode("TPP8H", "Y", ["G", "G", "G", "X", "P", "Y", "Y", "X", "Y", "X", "G", "P", "G", "P", "Y"], [0.7340493600966396, 0.7364835019894571, 0.7479410524247507, 0.7644902470988012, 0.7693953132985359, 0.7850824254434364, 0.7942625972214062, 0.809010857273496, 0.8322048155685714, 0.8529516554482705, 0.8718714040960778, 0.8769039784291618, 0.8769693838966492, 0.8782494644500042, 1.0]),
Electrode("TPP10H", "X", ["X", "P", "Y", "P", "Y", "G", "G", "X", "Y", "G", "Y", "P", "P", "X", "X"], [0.6690126463894015, 0.673143422281741, 0.6756300819674856, 0.6955521735278322, 0.7110757316781738, 0.7223754549253133, 0.7310134826810846, 0.7362233691950463, 0.809010857273496, 0.8212695428107966, 0.8222791452836857, 0.8321986708425181, 0.8594277171600766, 0.8784497405329538, 1.0]),
Electrode("P9", "X", ["P", "P", "Y", "X", "G", "Y", "G", "G", "Y", "X", "P", "P", "X", "Y", "X"], [0.5835224948750631, 0.5856692376185133, 0.6039527074849905, 0.6280310102707286, 0.6313459261762275, 0.6543121683400436, 0.699062371055021, 0.7078107291622329, 0.7262646894251579, 0.7429855215407208, 0.7619271904086306, 0.7637589256661573, 0.8350622168939891, 0.8675225850508996, 1.0]),
Electrode("P7", "P", ["G", "P", "X", "Y", "X", "X", "P", "Y", "G", "G", "G", "Y", "X", "Y", "P"], [0.7438324498677835, 0.7442461893873594, 0.7619271904086306, 0.7620563947146239, 0.7705165911414948, 0.7796277111780957, 0.7846187812573379, 0.8092996691093649, 0.8272855563600618, 0.8405909045339551, 0.8694061937420544, 0.8772407654439791, 0.9070421471097022, 0.9261388750758616, 1.0]),
Electrode("P5", "G", ["G", "X", "G", "Y", "X", "G", "G", "P", "G", "P", "P", "Y", "X", "Y", "G"], [0.7591323486872074, 0.7654474154794495, 0.7827324613809591, 0.7834223794157701, 0.7848321737338171, 0.786588816982753, 0.8063054786103359, 0.8476943800616953, 0.8511631147670395, 0.8694061937420544, 0.8741729636972596, 0.8775289903903197, 0.9011678807654042, 0.9278587653889621, 1.0]),
Electrode("P3", "P", ["Y", "X", "X", "Y", "P", "P", "X", "G", "G", "G", "X", "G", "X", "Y", "P"], [0.7580172452223808, 0.7593637843315469, 0.7703597014243755, 0.7901373872062134, 0.795554670349658, 0.8051393517263892, 0.8258274781926587, 0.8541984477960864, 0.8741729636972596, 0.8821715791704697, 0.8822576040866806, 0.9071609684411912, 0.9182568831440758, 0.9237202274715668, 1.0]),
Electrode("P1", "G", ["Y", "X", "G", "P", "X", "G", "Y", "P", "G", "P", "P", "Y", "X", "X", "G"], [0.7826609558225156, 0.7834633121967651, 0.7928522085462174, 0.8033448756157322, 0.809242899645061, 0.8118546759333646, 0.8222489647682472, 0.8498013636801319, 0.8661976623030267, 0.8734253682437589, 0.8821715791704697, 0.8981991258880619, 0.9039515592963456, 0.9194783765327779, 1.0]),
Electrode("PZ", "P", ["G", "Y", "X", "P", "X", "P", "P", "G", "G", "G", "X", "Y", "X", "Y", "P"], [0.7665776837121376, 0.7708284339672087, 0.7812446887805985, 0.7822006303363801, 0.8038494095406771, 0.8039683463288047, 0.8371252331897451, 0.8459664131903878, 0.8734253682437589, 0.8748839505467081, 0.8911935058741892, 0.89684079108938, 0.905002768372198, 0.912541219691341, 1.0]),
Electrode("P2", "G", ["X", "P", "X", "Y", "G", "Y", "G", "G", "P", "P", "P", "X", "X", "Y", "G"], [0.7845145621376668, 0.7883247302232643, 0.7932784104990818, 0.8014146446053872, 0.8036806494132037, 0.8088108751600238, 0.8099178763140313, 0.8319997666680687, 0.8517976192575785, 0.8748839505467081, 0.8760470164162375, 0.8975665581987128, 0.9090226866773308, 0.922166907398115, 1.0]),
Electrode("P4", "P", ["P", "G", "Y", "P", "P", "Y", "X", "G", "G", "G", "G", "X", "X", "Y", "P"], [0.7557659899342934, 0.7683568987197427, 0.7693953132985359, 0.7778819775820485, 0.79668320414442, 0.8061761909949077, 0.8350300337057763, 0.8358800407854945, 0.8760470164162375, 0.8786958915223326, 0.8792023212376161, 0.8934738182987346, 0.8951130622323055, 0.9036759674667244, 1.0]),
Electrode("P6", "G", ["X", "G", "G", "G", "X", "Y", "P", "G", "G", "P", "Y", "P", "X", "Y", "G"], [0.7383250823803039, 0.7488415050576368, 0.756398696531517, 0.7718278209664603, 0.789073379119966, 0.8102850046071559, 0.8193702004907354, 0.8332448600746678, 0.8414928664944511, 0.8633263262496121, 0.8718714040960778, 0.8792023212376161, 0.8990330145201187, 0.9217943033723826, 1.0]),
Electrode("P8", "P", ["Y", "P", "G", "P", "X", "G", "X", "X", "Y", "G", "X", "G", "Y", "Y", "P"], [0.715645106902637, 0.7438654921430811, 0.7462871245428553, 0.7592486075057094, 0.7803491215743378, 0.7945500980476754, 0.7983329595361773, 0.8152328336602825, 0.8158929330850977, 0.8433583051683815, 0.8594277171600766, 0.8633263262496124, 0.8769039784291619, 0.9072956114203069, 1.0]),
Electrode("P10", "X", ["G", "P", "Y", "G", "Y", "X", "G", "Y", "G", "P", "X", "P", "Y", "X", "X"], [0.5990010217600948, 0.6228477412356404, 0.650221612793409, 0.6808525631920193, 0.6895691192299702, 0.6953403440161076, 0.7009707429099734, 0.7154369862898791, 0.7451437284792546, 0.7588313349365062, 0.8130648781428516, 0.8152328336602827, 0.84717815919162, 0.8784497405329538, 1.0]),
Electrode("PPO9H", "Y", ["Y", "P", "P", "X", "Y", "G", "G", "Y", "Y", "G", "X", "X", "P", "X", "Y"], [0.663178147535348, 0.668556322625358, 0.6936893560778907, 0.6948914567462846, 0.7013680573293662, 0.7510542945121308, 0.7534842845248139, 0.7614231460043561, 0.8181134186874027, 0.8265210455824482, 0.832702808715297, 0.8675225850508994, 0.8772407654439791, 0.9003435932814, 1.0]),
Electrode("PPO5H", "Y", ["P", "Y", "X", "G", "P", "G", "Y", "X", "P", "G", "X", "G", "P", "G", "Y"], [0.7679722538660777, 0.7687217852895057, 0.7894438715602118, 0.7915516493281635, 0.8000379247462427, 0.8017111099711689, 0.8057708400327263, 0.8059778479695082, 0.8092996691093649, 0.8222489647682472, 0.8952976017065688, 0.9226716720608592, 0.9237202274715668, 0.927858765388962, 1.0]),
Electrode("PPO1", "X", ["G", "P", "Y", "G", "Y", "Y", "X", "P", "X", "G", "Y", "P", "P", "G", "X"], [0.7691908465084593, 0.7826371456027381, 0.7894438715602117, 0.7932784104990818, 0.8018690349148109, 0.8023531862952368, 0.8238613991517576, 0.8258274781926587, 0.8506178564422979, 0.8580431096658758, 0.8678448372952757, 0.8827949758027518, 0.9050027683721982, 0.9194783765327779, 1.0]),
Electrode("PPO2", "X", ["G", "P", "G", "Y", "Y", "X", "Y", "P", "X", "Y", "G", "P", "P", "G", "X"], [0.7604105131176503, 0.7630603266069448, 0.7834633121967651, 0.8020293217936196, 0.8041200937668356, 0.811633992068263, 0.8131555974565432, 0.8350300337057763, 0.8506178564422979, 0.8586084757381576, 0.8660375648920726, 0.8779663528794198, 0.8911935058741892, 0.9090226866773309, 1.0]),
Electrode("PPO6H", "Y", ["P", "P", "Y", "Y", "Y", "X", "G", "X", "P", "X", "G", "P", "G", "G", "Y"], [0.7506339853102337, 0.7667966556001686, 0.7741540383683285, 0.7942625972214062, 0.7980067175983926, 0.798798767559899, 0.8014146446053872, 0.8020293217936196, 0.8158929330850976, 0.8530137767200169, 0.8643384895209847, 0.9036759674667245, 0.9194349860685229, 0.9217943033723826, 1.0]),
Electrode("PPO10H", "Y", ["G", "X", "X", "P", "G", "Y", "Y", "Y", "G", "X", "X", "X", "G", "P", "Y"], [0.7071868406702554, 0.7124651436232048, 0.737205928195977, 0.7489921044805384, 0.7517643313363999, 0.7850824254434364, 0.78850922897172, 0.7980067175983927, 0.8102850046071562, 0.8222791452836857, 0.8471781591916199, 0.8908733187785499, 0.8944300574683064, 0.907295611420307, 1.0]),
Electrode("PO9", "X", ["Y", "G", "Y", "Y", "X", "X", "X", "P", "Y", "P", "Y", "X", "G", "Y", "X"], [0.6832945427000486, 0.6956883802179457, 0.6966568897343265, 0.7074596064136138, 0.7102930093113263, 0.7404261153334447, 0.742985521540721, 0.7705165911414951, 0.7717937564484302, 0.8077337427088471, 0.8327028087152973, 0.8595109726906737, 0.881268002806912, 0.9060313902614174, 1.0]),
Electrode("PO7", "G", ["P", "Y", "X", "Y", "X", "Y", "G", "Y", "G", "Y", "P", "P", "X", "Y", "G"], [0.7266907903388509, 0.767295616119739, 0.7714394646351539, 0.773223551010169, 0.7732306203802753, 0.7806844432708244, 0.783488810844847, 0.801711109971169, 0.8063054786103359, 0.8265210455824482, 0.8405909045339554, 0.8648245596957282, 0.8812680028069115, 0.8963215395430054, 1.0]),
Electrode("PO3", "G", ["G", "Y", "P", "G", "P", "P", "X", "Y", "X", "G", "X", "G", "P", "Y", "G"], [0.7624246719211825, 0.7650753653829924, 0.7665776837121376, 0.7834888108448469, 0.7995984611988828, 0.8012400331852765, 0.8118034352642394, 0.8299719744912648, 0.8378477667721828, 0.8511631147670395, 0.858043109665876, 0.866197662303027, 0.9071609684411912, 0.9226716720608594, 1.0]),
Electrode("POZ", "P", ["P", "Y", "P", "Y", "P", "G", "G", "G", "G", "P", "Y", "Y", "X", "X", "P"], [0.7326029771762029, 0.7553627098145129, 0.7645805877113855, 0.7646418352662225, 0.785035496539936, 0.7883247302232644, 0.8012400331852766, 0.8033448756157323, 0.8073142827650754, 0.8371252331897451, 0.8647260141481161, 0.8730518149426637, 0.8779663528794199, 0.8827949758027518, 1.0]),
Electrode("PO4", "G", ["Y", "Y", "P", "X", "X", "P", "P", "G", "G", "Y", "G", "X", "P", "Y", "G"], [0.7536945374690782, 0.7556323910865129, 0.7577938571253096, 0.7878880556187278, 0.7898621571773271, 0.8073142827650757, 0.8147052883027788, 0.8319997666680689, 0.8414928664944511, 0.8453223201760491, 0.8456778857614767, 0.8660375648920725, 0.8786958915223326, 0.9194349860685229, 1.0]),
Electrode("PO8", "G", ["Y", "X", "Y", "X", "P", "Y", "G", "P", "P", "G", "Y", "Y", "X", "Y", "G"], [0.7426375573972845, 0.7451437284792547, 0.7479410524247508, 0.7544809088945709, 0.7683568987197427, 0.793945802041004, 0.8332448600746678, 0.8405219053084345, 0.8433583051683815, 0.8456778857614767, 0.8462152782178914, 0.8643384895209847, 0.8757270826954928, 0.8944300574683064, 1.0]),
Electrode("PO10", "X", ["Y", "G", "G", "Y", "X", "Y", "Y", "P", "P", "X", "X", "G", "Y", "Y", "X"], [0.6772274695266416, 0.7248672938150816, 0.7262520658496614, 0.726538664646332, 0.7362233691950463, 0.7411315719577422, 0.7591082277684343, 0.7983329595361776, 0.8061140857138983, 0.8130648781428516, 0.8462782451970405, 0.8757270826954928, 0.8761234537478839, 0.8908733187785499, 1.0]),
Electrode("POO9H", "Y", ["X", "Y", "G", "Y", "G", "P", "Y", "X", "Y", "Y", "X", "G", "P", "X", "Y"], [0.684031740495607, 0.7023312423615125, 0.7080902642786017, 0.71845636041699, 0.7247312318926474, 0.740629949985763, 0.761423146004356, 0.7685375980621479, 0.7971449912006224, 0.8560130183318955, 0.8684861580339215, 0.8963215395430054, 0.8973836748271374, 0.9060313902614173, 1.0]),
Electrode("POO3H", "Y", ["P", "X", "G", "P", "Y", "Y", "G", "Y", "X", "Y", "G", "Y", "P", "P", "Y"], [0.7376785875818016, 0.7426979400507516, 0.7470825104903254, 0.766563473229896, 0.7687217852895057, 0.7730426052168882, 0.7806844432708243, 0.7971449912006224, 0.8023531862952369, 0.8291531073995551, 0.8299719744912648, 0.8346350893935642, 0.8647260141481161, 0.8994456209262971, 1.0]),
Electrode("POO4H", "Y", ["P", "G", "P", "X", "Y", "Y", "G", "X", "Y", "Y", "Y", "G", "P", "P", "Y"], [0.7277973068059864, 0.7305141122017187, 0.7447063063606635, 0.7560652055526104, 0.7621658358346554, 0.7741540383683285, 0.7939458020410042, 0.8131555974565432, 0.8216321134920441, 0.829153107399555, 0.834360303707283, 0.8453223201760491, 0.8730518149426637, 0.9119475494832109, 1.0]),
Electrode("POO10H", "Y", ["X", "P", "P", "Y", "Y", "X", "G", "Y", "Y", "G", "X", "Y", "X", "P", "Y"], [0.6895691192299702, 0.6947293145359784, 0.705549499802971, 0.7275713779661488, 0.7296597851981729, 0.7494338183716405, 0.7536945374690786, 0.7885092289717203, 0.8216321134920442, 0.8462152782178917, 0.876123453747884, 0.8812375067919037, 0.8863727643460582, 0.9096840472708283, 1.0]),
Electrode("O1", "P", ["X", "G", "Y", "Y", "X", "P", "Y", "X", "G", "X", "G", "Y", "Y", "Y", "P"], [0.720108468888636, 0.7324954269406292, 0.7447063063606635, 0.749705248810095, 0.7579615185985908, 0.7645805877113856, 0.7679722538660777, 0.7887966387014145, 0.7995984611988828, 0.8077337427088468, 0.8648245596957282, 0.8764690648017632, 0.8973836748271374, 0.8994456209262971, 1.0]),
Electrode("O2", "P", ["X", "X", "Y", "Y", "Y", "Y", "P", "X", "X", "G", "G", "Y", "Y", "Y", "P"], [0.7386905808728429, 0.7387943346231779, 0.7489921044805385, 0.7600178546884147, 0.766563473229896, 0.7667966556001686, 0.785035496539936, 0.8030154991718819, 0.8061140857138985, 0.8147052883027789, 0.8405219053084346, 0.8862813616519511, 0.9096840472708283, 0.9119475494832108, 1.0]),
Electrode("OI1H", "Y", ["G", "X", "P", "Y", "P", "Y", "G", "X", "Y", "X", "Y", "Y", "P", "X", "Y"], [0.6845190589571961, 0.7068606300970829, 0.7191158327011914, 0.7275713779661486, 0.7600178546884145, 0.7621658358346554, 0.767295616119739, 0.7717937564484301, 0.8346350893935643, 0.8401585883471872, 0.845789041053423, 0.8560130183318955, 0.8764690648017635, 0.8799434343534124, 1.0]),
Electrode("OI2H", "Y", ["Y", "G", "X", "P", "G", "P", "X", "Y", "Y", "X", "Y", "X", "Y", "P", "Y"], [0.7023312423615122, 0.7029961943878077, 0.7098885361535021, 0.7273625776332882, 0.7426375573972848, 0.7497052488100951, 0.7591082277684342, 0.7730426052168884, 0.834360303707283, 0.8427583965383625, 0.845789041053423, 0.8521607301995816, 0.8812375067919036, 0.886281361651951, 1.0]),
Electrode("I1", "X", ["Y", "P", "X", "X", "P", "Y", "Y", "Y", "G", "P", "X", "Y", "X", "Y", "X"], [0.6023249239456887, 0.6073898796073672, 0.6131674640923126, 0.6280310102707286, 0.6338561783086114, 0.6948914567462846, 0.7016098189090179, 0.709888536153502, 0.7732306203802753, 0.7887966387014145, 0.8347771586293102, 0.8401585883471872, 0.8595109726906737, 0.8684861580339213, 1.0]),
Electrode("IZ", "X", ["P", "X", "G", "Y", "X", "Y", "P", "Y", "P", "Y", "X", "X", "Y", "Y", "X"], [0.623920530655803, 0.6424372460860175, 0.6670322111220072, 0.7022873879178374, 0.7102930093113262, 0.7211462285052757, 0.7387943346231776, 0.7494338183716404, 0.7579615185985908, 0.7685375980621479, 0.7783403489198638, 0.8347771586293102, 0.8521607301995817, 0.8799434343534123, 1.0]),
Electrode("I2", "X", ["Y", "Y", "G", "P", "X", "Y", "Y", "Y", "G", "X", "P", "Y", "X", "Y", "X"], [0.6167925484973537, 0.6250867808058106, 0.6411399178227454, 0.6448869168127798, 0.6953403440161074, 0.7068606300970829, 0.7175866553737009, 0.7372059281959772, 0.7544809088945709, 0.7783403489198637, 0.8030154991718815, 0.8427583965383626, 0.8462782451970405, 0.8863727643460582, 1.0]),

    ]

    if len(electrodes) >= patternLength + 1:

        electrodeDistances = []
        for i, e in enumerate(electrodes):
            distances = []

            for i2, e2 in enumerate(electrodes):
                if i == i2:
                    continue

                distances.append({"electrode": e2, "otherColor": e2.colorStr, "distance": distance(e.centerPos, e2.centerPos)})

            distances.sort(key=lambda x: x["distance"])
            distances = distances[:patternLength]

            maxDistance = max([d["distance"] for d in distances])

            otherColors = [d["otherColor"] for d in distances]
            distances = [(d["distance"] / maxDistance) for d in distances]

            electrodeDistances.append({"electrode": e, "otherColors": otherColors, "distances": distances})

        costMatrix = np.zeros((len(electrodes), len(templateElectrodes)), dtype=np.float32)
        for i, e in enumerate(electrodeDistances):
            for i2, e2 in enumerate(templateElectrodes):
                if e["electrode"].colorStr != e2.color:
                    costMatrix[i, i2] = 1000
                    continue

                distanceCost = sum([abs(e2.distances[i3] - e["distances"][i3]) for i3 in range(patternLength)])
                colorCost = sum([(0 if e2.otherColors[i3] == e["otherColors"][i3] else 1) for i3 in range(patternLength)])

                costMatrix[i, i2] = distanceCost + colorCost

        print(costMatrix)

        row_ind, col_ind = linear_sum_assignment(costMatrix)

        for i, e in enumerate(electrodes):
            cost = costMatrix[row_ind[i], col_ind[i]]
            if cost > costTheshold:
                continue

            e.templateElectrode = templateElectrodes[col_ind[i]]
            cv2.putText(img, e.templateElectrode.name, e.centerPos, cv2.FONT_HERSHEY_SIMPLEX, 1, e.color, 2, cv2.LINE_AA)


    while cv2.pollKey() == ord('p'):
        cv2.waitKey(0)


    # Display the resulting frame
    cv2.imshow('shapes', img)
    if cv2.waitKey(1) == ord('q'):
        break

    time.sleep(0.1)


# When everything done, release the capture
cap.release()
cv2.destroyAllWindows()

